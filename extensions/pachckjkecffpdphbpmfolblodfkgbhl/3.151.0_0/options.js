import ExtensionSettings,{VIDEO_SETTINGS,TOOLBAR_SETTINGS,SHORTCUTS_SETTINGS,CHANNEL_PAGE_SETTINGS}from"@/js/lib/ExtensionSettings";import{queryClient}from"./features/shared/query-client";function updateCheckbox(t,e){const n=document.getElementById(t);n&&(n.checked=e)}async function updateSetting(t,e){if("home-page-shortcuts"===t||"video-manager-shortcuts"===t){const n=SHORTCUTS_SETTINGS;n.forEach((n=>{updateCheckbox(`${t}-${n}`,e)}));const i=Object.fromEntries(n.map((n=>[`${t}-${n}`,e])));await ExtensionSettings.setMany(i)}if("toolbar"===t){const t=TOOLBAR_SETTINGS;t.forEach((t=>{updateCheckbox(t,e)}));const n=Object.fromEntries(t.map((t=>[t,e])));await ExtensionSettings.setMany(n)}if("video-settings"===t){const t=VIDEO_SETTINGS;t.forEach((t=>{updateCheckbox(t,e)}));const n=Object.fromEntries(t.map((t=>[t,e])));await ExtensionSettings.setMany(n)}if("channel-page-settings"===t){const t=CHANNEL_PAGE_SETTINGS;t.forEach((t=>{updateCheckbox(t,e)}));const n=Object.fromEntries(t.map((t=>[t,e])));await ExtensionSettings.setMany(n)}updateCheckbox(t,e),await ExtensionSettings.set(t,e);if(VIDEO_SETTINGS.includes(t)){const t=getVideoSettingsState(await ExtensionSettings.getSettings());updateCheckbox("video-settings",t),await ExtensionSettings.set("video-settings",t)}if(TOOLBAR_SETTINGS.includes(t)){const t=getToolbarState(await ExtensionSettings.getSettings());updateCheckbox("toolbar",t),await ExtensionSettings.set("toolbar",t)}if(CHANNEL_PAGE_SETTINGS.includes(t)){const t=getChannelPageState(await ExtensionSettings.getSettings());updateCheckbox("channel-page-settings",t),await ExtensionSettings.set("channel-page-settings",t)}await queryClient.invalidateQueries(["extension-setting"])}function getVideoSettingsState(t){return VIDEO_SETTINGS.some((e=>t[e]))}function getToolbarState(t){return TOOLBAR_SETTINGS.some((e=>t[e]))}function getChannelPageState(t){return CHANNEL_PAGE_SETTINGS.some((e=>t[e]))}async function loadSettings(){const t=await ExtensionSettings.getSettings();updateCheckbox("video-settings",getVideoSettingsState(t));updateCheckbox("toolbar",getToolbarState(t)),Object.keys(t).forEach((e=>{updateCheckbox(e,t[e])}))}function translate(){document.title=chrome.i18n.getMessage("vidIQVisionOptions"),document.querySelectorAll("[data-i18n]").forEach((function(t){const e=t.getAttribute("data-i18n");t.textContent=chrome.i18n.getMessage(e)}))}document.addEventListener("DOMContentLoaded",(function(){translate(),loadSettings();const t=document.getElementsByTagName("input");for(let e=0;e<t.length;e++)t[e].addEventListener("click",(function(){updateSetting(this.id,this.checked)}))}));